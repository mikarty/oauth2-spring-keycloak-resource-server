{
  "id": "Carboss",
  "realm": "carboss",
  "notBefore": 1649757424,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "ea0661f2-aebb-47f2-b1de-d9cf00e008e3",
        "name": "default-roles-carboss",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "Carboss",
        "attributes": {}
      },
      {
        "id": "7ced6e59-2071-430d-b0bd-4385aac1dec4",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "Carboss",
        "attributes": {}
      },
      {
        "id": "725acddc-88f0-449e-8409-cc3ec23a7d9e",
        "name": "cars:read",
        "composite": false,
        "clientRole": false,
        "containerId": "Carboss",
        "attributes": {}
      },
      {
        "id": "ccb0dedf-f8d6-4afc-abf8-ecbc2095cdef",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "Carboss",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "38406fc4-523f-4304-9b5b-d0eda80df538",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "32fa9bc7-0258-40ca-bc14-2b506c33468f",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "ec9290f7-4aeb-4171-b51c-b213323175a3",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "e6c44074-1dca-4926-984c-3415297e5b22",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "7b51e268-12b6-4928-b484-d53bcb083e8b",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "19365e52-bc95-4440-9ce1-ccb82dde0ec0",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "f8114ada-31d8-4787-b990-c939e07c5b9b",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "8a9b1027-9067-4c47-a05f-f971e8560819",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "de04e1dd-28fe-48c1-9709-b1bd813e51dd",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "147e55a9-4efc-45e3-becd-0cded0996df0",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-realm",
                "manage-authorization",
                "view-identity-providers",
                "query-realms",
                "query-clients",
                "query-groups",
                "view-events",
                "view-clients",
                "manage-clients",
                "manage-identity-providers",
                "create-client",
                "query-users",
                "view-users",
                "manage-events",
                "manage-realm",
                "view-authorization",
                "manage-users",
                "impersonation"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "4ffc2937-094c-4613-8432-b3dac1dde98d",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "85dec8a7-6dc9-427a-953c-ea883ede3913",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "198751ae-c0d4-4dae-a904-f00c0baba251",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "9d51b05f-0c54-4695-9cd7-766f14a3c11c",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "8ffb7ebe-8a69-4afe-bd5e-89e3d714bbc9",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "22dfdbd1-45a6-4b0f-b580-44e73c0c6d85",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "12750e3f-bb81-4d1a-af1b-17542c81cac0",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "21bf3da3-7f94-44f5-8661-37edd2ddcbd0",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        },
        {
          "id": "7ae9e49b-a534-4dde-83a2-b51eb7fdaf40",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "b89359d8-1d71-4d7c-9b64-167737c6736a",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "broker": [
        {
          "id": "cf3d1436-2881-4d4b-b3dc-7e114eeec075",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "8977141d-8526-44b4-a4af-551497ecbc94",
          "attributes": {}
        }
      ],
      "carboss-client": [],
      "account": [
        {
          "id": "1629b9ad-294b-4cc2-972a-9dad900f3e93",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "f59305bc-0417-4d39-b0ee-b41b75ebb49a",
          "attributes": {}
        },
        {
          "id": "81ed79ba-d4ee-4846-aef8-63a2e9b0bbb6",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "f59305bc-0417-4d39-b0ee-b41b75ebb49a",
          "attributes": {}
        },
        {
          "id": "20f10079-70a8-42f3-bd19-8e8c3c3d6f9d",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f59305bc-0417-4d39-b0ee-b41b75ebb49a",
          "attributes": {}
        },
        {
          "id": "775c46e2-a1cd-42b9-b01c-c563bd5adde2",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "f59305bc-0417-4d39-b0ee-b41b75ebb49a",
          "attributes": {}
        },
        {
          "id": "e025f9ff-f891-4881-9b56-caa87e1ddc46",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "f59305bc-0417-4d39-b0ee-b41b75ebb49a",
          "attributes": {}
        },
        {
          "id": "1fde4174-4f48-43b7-80ce-dada2df7aac3",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "f59305bc-0417-4d39-b0ee-b41b75ebb49a",
          "attributes": {}
        },
        {
          "id": "4a497421-bd7c-4fc1-b8c2-d54cc67e53eb",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "f59305bc-0417-4d39-b0ee-b41b75ebb49a",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "ea0661f2-aebb-47f2-b1de-d9cf00e008e3",
    "name": "default-roles-carboss",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "Carboss"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "0e7729d3-e21f-4c6b-a0f4-7a3c0449a596",
      "createdTimestamp": 1649703222321,
      "username": "dealer",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "credentials": [
        {
          "id": "fe87c66e-7987-449a-9b96-383ce21a2175",
          "type": "password",
          "createdDate": 1649703233390,
          "secretData": "{\"value\":\"heVfe+jTQnCJnwO3YEnbPzrPutkFu59SMu9uOuVsU+eE54eVFoMVJ9S1qHCqXh8shpHY0s3Jfh3l14vPJPHRJQ==\",\"salt\":\"2TLGSHXESR4jmp7AZb/qnQ==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-carboss",
        "cars:read"
      ],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "f59305bc-0417-4d39-b0ee-b41b75ebb49a",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/carboss/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/carboss/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "85558f4f-e350-4005-9547-8357260463c4",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/Carboss/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/Carboss/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "c28ca4c8-441e-4a5f-b77e-e5c22fd6d6bb",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b5245d8c-a19d-4b69-9c38-b00fc6728c41",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8977141d-8526-44b4-a4af-551497ecbc94",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "8386be5e-337a-4e47-90cc-3cfdb687f562",
      "clientId": "carboss-client",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "d52HHXaX7ixuLmdIiBjQHVSTj6Q2KJZI",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "acr.loa.map": "{}",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "token.response.type.bearer.lower-case": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "b89359d8-1d71-4d7c-9b64-167737c6736a",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dde325cc-d6d3-4ba3-8353-dc312e475242",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/carboss/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/carboss/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "3a7ba3f6-fa6e-4ae2-ba4d-0eae63d164f4",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "fdf7417b-02ce-4041-aca5-32de7eb091b8",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "86762359-7d6e-4bbc-aa8d-1c04597887dd",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "04439400-58b6-4fad-a9bb-a12e671b12c3",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "e950c3ca-f824-4dc9-a576-8c6800f61c20",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "1e67b99f-eea8-4d7b-8a25-a7a7beab0ad1",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3a894405-b166-4676-8031-eef0e32fecdb",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "7959c6bb-c5ea-43d8-9ddb-6a1ee85fa78f",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "8cf41311-1d06-44c6-8e9a-061cc6542220",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "bd226144-1a96-4523-b3df-7461f0a41dfc",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "b3d23f36-229d-428d-8bc7-6bb7d658e58a",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "b440fcd5-467f-49ef-b25b-910f6c4f1891",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "24e50179-0b26-4854-b605-53e66b37151a",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "3ed3142a-fcee-49b0-a690-a6a6ff40a0a9",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "cb84232b-4db7-4289-807c-7410416b22b4",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "19595916-539f-423d-b6b5-476b62246b4d",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "054cf37d-c540-41d3-a418-29b8dcf86193",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "1f42ac39-34cc-4fde-bb7c-849cf82824a0",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "a36b27bc-9160-4060-a60d-e05a273dad15",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "9c0a2233-17bb-4a15-8bba-37efba15315a",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "520c5d8d-d6a4-4716-ab2c-1dba5a81e344",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "00e513cd-d9c0-44c8-a86e-61daebc56271",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "1a300dda-f352-41d0-a2f3-a07a93ab02ff",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1a0476e9-5e22-484c-a0ca-8cef300be4a0",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1452cbca-b629-44bf-b41a-fda39a4bb4cc",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "83f02f2d-291a-4120-bb8a-dd8a823eb8a2",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d3fa6a04-d3ef-47a2-988a-fadabba36274",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8c0faf7c-e98c-49a2-8889-363937490d6c",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b6ca04eb-56be-4e4a-95a1-8f69018bdd18",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ee64ef20-1f5e-4bd9-905d-ea7b6ae808b7",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "7f34e633-c193-4ec1-87c3-1de5ec814dcd",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c3e2fe1a-2df6-47c0-a31d-6f962689b3ac",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "daaf3b9b-9f0e-4d47-8ed5-0c75fe65d1dc",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "edb3822a-012c-4735-90eb-b617ca79e189",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "81d05d35-fb77-47a0-b1d2-77d5a70a6cee",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2398893b-9b82-401c-9049-80ec3e93393c",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "1e34e4da-9c8d-4b8c-b7fa-7c77203aa690",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "4a2c4d71-400c-49b2-83b6-477a7591b858",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-property-mapper"
          ]
        }
      },
      {
        "id": "31eb7951-6d0a-4c4d-9f65-c36076e58729",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "6a49a1e0-5df6-4e4f-b130-93801831d67e",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "6d11983d-5b4f-43bc-995c-8714b57deb11",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "d9c6abd5-157b-40a3-8c16-f3814929c9a2",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "e87b2f26-14b6-4fe7-9268-4e53cde527cd",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "9f64ad65-b59f-4685-b769-ce8947d49ac7",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "780d41a1-32dd-4810-90d9-9f1f6068392b",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "37a0d70f-22f4-4bd1-8879-7624316a2c90",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAiXCw0KYCj4wlFyftxievpcRpUo8ClSr9fJXmjaL8Y4WaqZcx1q3bYZXCGhNnvmUTjl1tZcFmTYBKQsCIUbEtHXPn/2dZpk8onb/vbz0OTEUbymhyX1hZEp28SYuh1gQGjw6X0NMfmji5V4/npKICf2xbZx7Kaetc14hCI0V1VVHyZlzKcXX4hisSekW8nZKtS2kdKMxPpmJL7Lkz4TbLsus2woteTQgZxyWjyD67kYwhd6nshqPmhP+WFb0+rzIrMf6KIRqBT7Pf+z2AQOF8zuFaQ62ZTTVVo/gySFy9Cfh0H7kdKpgQK3er1JfnJhhhQHi38vtJVKmfr5l5WSX4AQIDAQABAoIBAD9tj1wrUQE4VyGxnq0VQZ2J4GVmdHWs6mEluMnizwGK9g6QJUMC5zzI5VQtYnJeqUDJYyRTtcfMjfjya7bvwndWN1oKMzhqTb9HhdNbZQ7T0fh+bVINLsZFn1B9rUlcgD5jKLMJzArbZMXBNtEmp2pw8lnLvvRU13rsekFW28hspNQ6CeyCCXqnoon0XrQfZjv4ygbJGgIGPJnUiTDEoEMU0Sa5vzQ+JKPy1K2/KgInBVkH5oGaD83uHY34xD98CCIefFzFxQ599c3aswdcirBsZ2KhOJAVdqDDcoHhpFm9Bmk5z4na90+gRvAFuaBOya3jLDrPZ2CYYvuTj/rqsAECgYEAxIhyfo+NE4zFFSZwbcWOdlKHvhflIV55UcnUwpdxAaAAqm85lmun4dyzoosmx1Tc+N2GYNnB2msfQkKb72VkobIRjSdMsB6UQ3hmxYz1ZUYCNKZHtHs8FUsoCEMjIEMDjsZU55nDEfAYJyIgIfZKTp5QU8fzL0zDaFV2mMVTmEECgYEAswbiE46WoYI0Vj0vDGVGV7M8lOkT7sxbHsB8fk/gegwaEp0v/gR9rMNwMlfVVZb2lXW5Rd3izjx6iGMAhHvVG3sLjGH4zMNM28hZ3++1ZVIvAiQb9z6Et/Pm9uTQd9G4TKLECwKyXVbXzGdEJmgHeidIu2Z+7dstKIgVdO8cb8ECgYEAgoOilU27gFohn3QRgbSKcSVJpAG2VjypEJmaQ0fS8iNRjd2jPrNrn+CzIqSKMiG3RUXHsZWq2OP+tEAL0iVheMgKQ9TvZp5IE65ngZWkeYbOfCxYvhCAzBtHEIWVVB1sxWoMhGlmVAk/4O0WrbcjjaYw7hKA+s5djnIC+l1AsIECgYAyLa62LpQXxsfmmBWU0toJgMptLnsQxqSPlQIP4VGYw8WXDAnEl/ulrc3HvoikCcEpmSqJ46xLg/YQPjeJ6q+LmUxeV6OFuQPU4m4WbziXopZcckSIYzSN3sYQ04d+3gBbMo/iSio2MT4hI5ydazEVUud25z6SaolYv/PLp61/wQKBgQCr/Vo4fvihYzkRsR4EKa0oUQjOV0CwEo6bTi0ym5b5Qcd9gceG55iM9IWKJjderEAAXYtpusup3b0ali6XtknWbrZgoWUKkT/XrcG7MwPS0dZxBkruL3BCgc8wCCQxHPdY//lzAFOyQvAbM6L/FXVHzlJwMPYGeLdSp3Sgjp0XyA=="
          ],
          "keyUse": [
            "ENC"
          ],
          "certificate": [
            "MIICnTCCAYUCBgGAGcp3TDANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdDYXJib3NzMB4XDTIyMDQxMTE4MDA0MFoXDTMyMDQxMTE4MDIyMFowEjEQMA4GA1UEAwwHQ2FyYm9zczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIlwsNCmAo+MJRcn7cYnr6XEaVKPApUq/XyV5o2i/GOFmqmXMdat22GVwhoTZ75lE45dbWXBZk2ASkLAiFGxLR1z5/9nWaZPKJ2/7289DkxFG8pocl9YWRKdvEmLodYEBo8Ol9DTH5o4uVeP56SiAn9sW2ceymnrXNeIQiNFdVVR8mZcynF1+IYrEnpFvJ2SrUtpHSjMT6ZiS+y5M+E2y7LrNsKLXk0IGcclo8g+u5GMIXep7Iaj5oT/lhW9Pq8yKzH+iiEagU+z3/s9gEDhfM7hWkOtmU01VaP4MkhcvQn4dB+5HSqYECt3q9SX5yYYYUB4t/L7SVSpn6+ZeVkl+AECAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAduTqh23YOeTeHriEFb16R8Y0hqhJlTGYD13jGbtniO3wI8MhhfXFUjQm5+GdbgVKBbX0PyF8iA+ddoEex2j2qEIKaR2QuwZUUjDCtpwFqjmg78lo15PDh9qXA/zkXpEdgBan3i4Dijejl6Bq9JFGjKcDvr8RbdkM3s3t1a9fGTbNWZT+nLuVai1DikDeVrLJ4JHV5aPLdVixy39qIhYbQDtChLGTVNumyfrzvxQWj+LGI1eBKcAAWLTdRrpgCry+yPjyrT4vYwGBrchBjoKH9pWE/A9g8+exR5xCVUE0T+P/V/6VP90VDdTFHSdQ4ESIOdQH/uomA5NvJ38UBs0C7g=="
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "09c6aba5-a27b-43e7-8b50-efeed6013108",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "23cd5d9c-abb7-40ef-b24f-cebe599b87e3"
          ],
          "secret": [
            "9Brs5uGKniEkZ_qGHyH1OMVrQUj6w1iUU4XrOhP8cSWOGieOfujbrXET1lPoDc6cCjDf6DNX3FeX24MSrb_eLw"
          ],
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "85bfc1ca-72f2-4ff5-a321-cc0c39eec91a",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAgh55aC5j1A/Jcu2inPzSLPohe43NwiVThjauYjTvmaM6XHXamip8r5BoSOYizIxjkzPjNBtsT9QkLI2n7vs0ykEb4uNs+AiHbt6BsQL/1fsvvx4uaPgfqfyZHzBTWwBPSPO8GuiCee+xugAAr5N354zWBq8lS439BkabET40/Mds0n7POTUjzx5VRX3/4LC+jeZWO96XICRnnor/YJBUEtvTZbulZLvBJi2rN6Chn6EPhU5EQTTucSjWWsD8vuCZCNSp8+15yFUG77Q83LzeNAt0FB0Lw3moQ+OWfYvVqeMr+0BpGmZuYnOI7X5+zNHJUwCG0kYOlNzKeLyoIhw4ewIDAQABAoIBAHXIFgea7lxXyfcRakAGjk2OQV6w1o6l8PwtZR6aYkRFP5/QQoeIbAMTiYJrZxaXAc+OiVxyclG0auY1d8zYcUmfNBnl2Y6PUeCm4uiTGXfdfrPWIxZ7e1YIw6Y6vUlDd4FGt3/39ZtgwBToybYkm8XqcxXr1quUpHPY16b9E0O4BmPvSCGyXa1M7qerD2SgtH3bsxvDltJHpBrhQEU/ZD4/oR2Evop/VovSHFSLOwss3OnBBAa125I7DorBt0bbXcENDNwsYvahLI1e8uazXc32HB7VBrmgoupDZstkbBT5Im4ackyXCJoxwfrYVmA1EMeNFLTzce9Ile/BsXuE33ECgYEA1pga7ABKNHsmkHtzUV3ApzhMrLIWvyw2wxJgKau+HqLpE5TU0PFM0kh8POFYyiv9dyk+a2kYsTwki6q3BwOXa7apNGho9op73wmyAofv4bX7WgoBglpPB5zjLcapXPKEwiRG2+XfBP/ynSEL49MHslIIFBoguymzWc7uqHbv0akCgYEAmzm2zpGyB+wz0kj6rhk6eXaTz48PQ7iJ0F0JqpJ6BbPNsRUvJ7BWJT0jKV/x0i9q/pnKAhvbjPes8PWO5you95w3xFaRLpU0Fpq/Jy9+SPEgw1F7oyuxUyYhdK+jYzleN65qUIFVDymgKMJTqLNW214AaKoV8S0jqS8z3+k314MCgYAW7+kowpsr4uHrXZak4s190jG33804n+Q2k5c9vQK0SZt6IVViA/i/HUpSQ4/3BB6yhvEKEBC4mQIa/6NSl5quw7ZwSJy3hXPaEjI5vQfx6z6zkBA7O6Xo3WcW9H4T1kREcBY22OouoaDwFKEtt9fBwqzkYSqQdtOZzNmLnjLiCQKBgDkg7J7qEFPKIuhp45jfwB2j/pKNXFjYOiBtnXkhn7cpjbJ20XwR8iKSdbZskVuCCCbcAvTzu8IOBaBJP+bkJ5UJ8ZxZH+W9FAadvWx2lkvSMvSvsIlFM2YeyoFfgwqpuntTvd0TPHLwJvnZS2DzYCwsVIowzxKMQmup67Wk5+BxAoGAZLWlZKQjX0jYP8cEKc9+aw97ZEVB5nUXSmlpCWDxumvpCUjejJ5rT9G2/HgelA2IhQ99UNnIcEgbR1I9eExyRRQJ0Q5l+loONLEd7KnGfyZmgBJ+rzich3aHtDF8ypnYArKBDe33LV8ipR0PpMttSgi7b9eSMPHQvCTPf8rUsbo="
          ],
          "keyUse": [
            "SIG"
          ],
          "certificate": [
            "MIICnTCCAYUCBgGAGcp3DTANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdDYXJib3NzMB4XDTIyMDQxMTE4MDA0MFoXDTMyMDQxMTE4MDIyMFowEjEQMA4GA1UEAwwHQ2FyYm9zczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIIeeWguY9QPyXLtopz80iz6IXuNzcIlU4Y2rmI075mjOlx12poqfK+QaEjmIsyMY5Mz4zQbbE/UJCyNp+77NMpBG+LjbPgIh27egbEC/9X7L78eLmj4H6n8mR8wU1sAT0jzvBrognnvsboAAK+Td+eM1gavJUuN/QZGmxE+NPzHbNJ+zzk1I88eVUV9/+Cwvo3mVjvelyAkZ56K/2CQVBLb02W7pWS7wSYtqzegoZ+hD4VOREE07nEo1lrA/L7gmQjUqfPtechVBu+0PNy83jQLdBQdC8N5qEPjln2L1anjK/tAaRpmbmJziO1+fszRyVMAhtJGDpTcyni8qCIcOHsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAQOCz+bnusJzJZBSrhgOY+LYM0ouEaaouejJggeJesmDPBbZqcy4M2sAH2Ct0GnkTpsGFqKJsI/afGixZ+NsAsz2JUDRMGt0Lsvs10rx7/Ta7MCBg5aivfkoT61jfqEVchYiJSpNBabWeD9V9aREHg0FulL6ZZDY7by0OY1IoWnYRe+BKDciKFmLOP89yMn2nPsppnN2pBw0vhmEbODiZo/Rc9+Y+vlm6t6rsgN6JJGOJdYS79zBMTvq6Rn+7DBcXVc7tZCCFlsX9uSbTvV1DOMGFQBEGJHNMRy99ILb7b4MnvpStSYtzPS+PvJF439MhnvfjHyQqmK25cjvopiNfIA=="
          ],
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "c013126b-b8a1-482f-8d86-7f1e82abf6a2",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": [
            "3a6ada2c-aba8-4bac-b9b8-26c57a9c7ac0"
          ],
          "secret": [
            "0CMT_GiflfZLirW17IdF8A"
          ],
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "f8fa7bfe-9a8f-400d-85ff-5df76eb9558f",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f6568d10-9fa0-4c90-a286-d5a6c36bd7bd",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "888d470a-f356-488d-b5fa-d39a6f48cd75",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8447e3cb-5802-42ad-985d-e0f3c1a93626",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fedfbaa5-5791-4d7b-9ae1-eb718daf470b",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "83aaecf9-b506-4e11-a712-92e8fa40797e",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "240a742d-c4f4-4f0f-b7f9-eea1c44e9a61",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "962cce3a-6585-49fe-805d-51ceca548000",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d87b9867-311b-43ff-9d31-fe7131d4ea53",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f16d80cc-2f84-4482-b680-ffcf060ea0d5",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "95b85428-3008-46c7-8d03-ea85a8766dc7",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "721dde92-00f5-486b-a5d8-a2e4f047b4f9",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "de91e974-c39b-49fc-abd2-53a6dc47f068",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cd3cc7e3-4a2c-4a71-a8bd-3402a4bfe119",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b29e9dac-8a65-4657-819e-1b0f423e364d",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2c81a290-9bfc-44e3-ba39-4237417e3880",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "3ae45bb8-158d-4a00-8b0a-a57730e09099",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bfafe202-10d7-4028-80ae-b188b970ed94",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "bf8e0d1f-8f01-4ed3-95ac-d2748bc933cb",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "36e4049e-928b-48b1-beca-ad3db0c7a21f",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "d8c2c55b-9606-4db9-8974-c3f9c6d53f44",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "f51091be-9c0c-4b46-8493-9d8e72134cc3",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "userProfileEnabled": "false",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "17.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}